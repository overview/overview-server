# This is the main configuration file for the application.
# ~~~~~
#
# More settings are in common/src/main/resources/reference.conf
#
# Do not edit this file. Instead, set environment variables.

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
#
# Also, this key must be SECRET. Set it with an environment variable. The
# default, committed to Git, is only for dev/test environments. If you deploy
# without overwriting OV_APPLICATION_SECRET, anybody who can browse to Overview
# can log in as any user, without a password.
play.http.secret.key="]EZEnf=<QPIbFEm^C@xG;o4XAI?u^T2IKAo:nJt7=S:_5hY2MuieEr`xQ7i=D_Yt"
play.http.secret.key=${?OV_APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Connect/disconnect from database on startup/shutdown, using dependency
# injection
play.modules.enabled += "modules.DatabaseModule"
play.modules.enabled += "modules.BlobStorageModule"

# Makes Assets behave like they do on Prod. That's important for profiling,
# and it accelerates integration tests. But it doesn't work when editing
# assets. So ... for now ... uncomment this when profiling, and comment it
# out when developing JavaScript and CSS.
play.modules.disabled += "controllers.AssetsModule"
play.modules.enabled += "modules.ConstantAssetsModule"

# Email
# ~~~~~
# Configure how emails get sent. If SMTP_HOST is empty, the mailer will be a
# "mock" that outputs to stdout instead of connecting to any server.
play.mailer {
  host=""
  port=0
  ssl=no
  tls=no
  user=""
  password=""
  host=${?SMTP_HOST}
  port=${?SMTP_PORT}
  ssl=${?SMTP_SSL}
  tls=${?SMTP_TLS}
  user=${?SMTP_USERNAME}
  password=${?SMTP_PASSWORD}
}

mail.from="no-reply@overviewdocs.com"
mail.from=${?MAIL_FROM}

play.assets {
  path="/public"
  urlPrefix="/assets"
  defaultCache="public, max-age=31536000, immutable"
}

# Analytics
# ~~~~~~~~~
# By default, we do not use Google Analytics
analytics.ga_tracking_id=""
analytics.ga_tracking_id=${?GOOGLE_ANALYTICS_ID}

# By default, we do not use Intercom
#
# To see Intercom on its test account, run this:
#
# INTERCOM_APP_ID=wivdqio5 INTERCOM_SECRET_KEY=[key] ./sbt run
#
# Where [key] is at https://www.intercom.io/apps/wivdqio5/secure_mode_settings
analytics.intercom.app_id=""
analytics.intercom.secret_key=""
analytics.intercom.app_id=${?INTERCOM_APP_ID}
analytics.intercom.secret_key=${?INTERCOM_SECRET_KEY}

# Overview
# ~~~~~~~~
# By default, users need to log in (and register with email accounts)
overview.multi_user=true
overview.multi_user=${?OV_MULTI_USER}
overview.allow_registration=true
overview.allow_registration=${?OV_ALLOW_REGISTRATION}
overview.twitter_consumer_key="bbdaJbFqZex5B11n5lTw"

# If the welcome banner is non-empty, it replaces the logo and video on the welcome page
branding.welcome_banner=""
branding.welcome_banner=${?OV_WELCOME_BANNER}

# Favicon. If non-empty, given values will replace favicon
branding.favicon_ico_url=""
branding.favicon_ico_url=${?OV_BRAND_FAVICON_ICO_URL}

# Navbar logo. If non-empty, given values will replace the logo in the navbar
branding.logo_h40px_url=""
branding.logo_h40px_url=${?OV_BRAND_LOGO_H40PX_URL}
# Overview will fallback to logo_h40px_url if logo_h40px_2x_url is not set
branding.logo_h40px_2x_url=""
branding.logo_h40px_2x_url=${?OV_BRAND_LOGO_H40PX_2X_URL}
branding.logo_h40px_width_px="128"
branding.logo_h40px_width_px=${?OV_BRAND_LOGO_H40PX_WIDTH_PX}

# By default, non-admin users can export
overview.admin_only_export=false
overview.admin_only_export=${?OV_ADMIN_ONLY_EXPORT}

# Canonical URL of the website.
#
# For any URL other than this, Overview will respond with a redirect.
# If unset (the default), never redirect.
overview.canonical_url=null
overview.canonical_url=${?OV_URL}

# URLs for welcome email
overview.help_url = "https://www.overviewdocs.com/help"
overview.help_url = ${?OV_BRAND_HELP_URL}
overview.contact_url = "https://blog.overviewdocs.com/contact"
overview.contact_url = ${?OV_BRAND_CONTACT_URL}

# Performance-tuning: how many Documents to query per SELECT.
#
# Even though PostgreSQL and Akka _could_ stream all the documents from a single
# SELECT call, we don't want that: the SELECT would take a very long time before
# any results came through. Instead, we find the list of document IDs to query
# and then we SELECT just the first few documents in that list. Presto: a fast
# response time.
#
# Tuners beware: Documents can be beefy. Multiply this number with (2 *
# max_n_chars_per_document + [TODO: something like max_n_bytes_metadata_per_document])
# * (n concurrent requests you expect to serve) -- that's how much memory the
# web process can consume.
overview.n_documents_per_stream_packet=20

# Performance-tuning: how many Documents to regex-test in a single query.
#
# Overview will stop matching after this and assume all subsequent documents
# don't match. That's to keep Overview responsive: we don't want to stream
# the entire document set through a regex usually, because it'll take too long.
#
# TODO create a feature that lets users regex the entire docset. Maybe a
# progress bar and show matches before we've counted them? See
# https://github.com/overview/overview-server/issues/676 for a bit of our
# thinking.
#
# Set this high to save users from a warning that we can't search all the docs.
# Set it low for a responsive UI.
overview.max_n_regex_documents_per_search=2000

# Mailchimp configuration
mailchimp.api_key=""
mailchimp.list_id=""
mailchimp.api_key=${?MAILCHIMP_API_KEY}
mailchimp.list_id=${?MAILCHIMP_LIST_ID}

# Redis configuration
redis {
  host="localhost"
  port="6379"
  # default is empty password = no auth. https://github.com/antirez/redis/issues/3676
  password=""
  host=${?REDIS_HOST}
  port=${?REDIS_PORT}
  password=${?REDIS_PASSWORD}
}

# Don't require CSRF on JSON requests. That includes API requests and
# integration-test "create user" requests. (It also includes our own
# JavaScript, but that tends to include csrfToken anyway.)
#
# Play docs suggest that buggy browser extensions can bypass CSRF checks that
# ought to occur. There's nothing we can do to defend against buggy browser
# extensions in general, though, so we don't expose much by opening this up.
play.filters.csrf.contentType {
  whiteList = [ "application/json", "application/json; charset=utf-8" ]
}

# For integration tests, we sometimes DELETE a user. Again, there's no known
# CSRF exploit here....
play.filters.csrf.method {
  whiteList = [ "GET", "HEAD", "OPTIONS", "DELETE" ]
}

# Don't require CSRF on _AJAX_ requests. This is a bit more lax, security-wise,
# but again: it's according to spec.
#
# Some of our code AJAX code (particularly Backbone methods) is a bit too
# simple to handle the CSRF token.
play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
}

# Trust reverse proxies. This is essential on AWS.
play.http.forwarded.trustedProxies=["0.0.0.0/0", "::/0"]
# If you have a modern proxy with "Forwarded:" headers, set this to "rfc7239":
play.http.forwarded.version=x-forwarded
play.http.forwarded.version=${?OV_HTTP_FORWARD_LOGIC}

worker {
  message_broker_hostname: "localhost"
  message_broker_hostname=${?MESSAGE_BROKER_HOSTNAME}
  message_broker_port: 9030
  message_broker_port=${?MESSAGE_BROKER_PORT}
}

akka {
  actor {
    provider: remote
    allow-java-serialization: true  # FIXME should be false

    serialization-bindings {
      # TODO use protobufs
      "com.overviewdocs.searchindex.Utf16Highlight" = java
      "com.overviewdocs.searchindex.Utf16Snippet" = java
      "com.overviewdocs.searchindex.SearchResult" = java
      "com.overviewdocs.searchindex.SearchWarning$TooManyExpansions" = java
      "com.overviewdocs.searchindex.SearchWarning$TooMuchFuzz" = java
    }
  }

  remote {
    retry-gate-closed-for: 1s

    artery {
      canonical {
        hostname: "localhost"
        hostname: ${?MESSAGE_BROKER_CLIENT_HOSTNAME}
        port: 9031 # The message broker is allowed to connect to this. On production.
        port: ${?MESSAGE_BROKER_CLIENT_PORT}
      }
    }
  }
}
